# -*- coding: utf-8 -*-
"""Untitled0.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1Y7hJP7qXUYC-K7YD40kiqYj4Hz-TRluh
"""

from google.colab import drive
drive.mount('/content/drive')

import torch
import numpy as np
import pandas as pd
import pickle
from torchvision import transforms
from torch.utils.data import DataLoader, TensorDataset

# device
device = torch.device("cuda" if torch.cuda.is_available() else "cpu")
print("Using device:", device)

# unpickle function
def unpickle(file):
    with open(file, 'rb') as fo:
        dict = pickle.load(fo, encoding='bytes')
    return dict

# load
test_data_dict = unpickle('/content/drive/My Drive/Colab Notebooks/cifar_test_nolabels.pkl')
test_images = test_data_dict[b'data']
test_ids = test_data_dict[b'ids']

# transform
test_images = test_images.reshape(len(test_images), 3, 32, 32).transpose(0, 2, 3, 1)  # 从CHW转换为HWC

# preprocess
transform = transforms.Compose([
    transforms.ToPILImage(),
    transforms.Resize((32, 32)),
    transforms.ToTensor(),
    transforms.Normalize((0.5, 0.5, 0.5), (0.5, 0.5, 0.5))  # 根据模型训练时的配置调整
])

test_images = torch.stack([transform(img) for img in test_images])

# data loader
test_loader = DataLoader(TensorDataset(test_images, torch.tensor(test_ids)), batch_size=64, shuffle=False)

# load model
model = model.to(device)
model.eval()

# predict
predicted_labels = []
with torch.no_grad():
    for images, _ in test_loader:
        images = images.to(device)
        outputs = model(images)
        _, preds = torch.max(outputs, 1)
        predicted_labels.extend(preds.cpu().numpy())

# generate CSV
submission_df = pd.DataFrame({
    'ID': test_ids,
    'Labels': predicted_labels
})
submission_df.to_csv('submission.csv', index=False)